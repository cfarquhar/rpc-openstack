---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Install plugin dir
  file:
    path: "{{ maas_plugin_dir }}"
    state: directory
    owner: "root"
    group: "root"
    mode: "0755"

- name: Install MAAS Plugins
  synchronize:
    src: "{{ maas_source_plugin_dir }}"
    dest: "{{ maas_plugin_dir }}"
    delete: yes

- name: Drop in wrapper script to run maas plugins in venv
  template:
    src: "run_plugin_in_venv.sh.j2"
    dest: "{{maas_plugin_dir}}run_plugin_in_venv.sh"
    owner: "root"
    group: "root"
    mode: "0755"
  when: maas_venv_enabled

- name: List plugin files to chmod
  shell: "ls -1 {{ maas_plugin_dir }}*.py"
  register: plugin_files

- name: Chmod listed plugin files
  file:
    path: "{{ item }}"
    mode: "0755"
  with_items: plugin_files.stdout_lines

- name: Create openrc file
  template:
    src: "openrc"
    dest: "/root/openrc-maas"
    owner: "root"
    group: "root"
    mode: "0600"

#TODO(cfarquhar): This task is a workaround for http://github.com/racker/rackspace-monitoring-cli/issues/85
#		  Once it's fixed this task should be removed.
- name: Replace rackspace-monitoring-cli's CA cert bundle with our system bundle
  shell: |
    cp /etc/ssl/certs/ca-certificates.crt {{ maas_venv }}/lib/python2.7/site-packages/raxmon_cli/data/cacert.pem

- name: Verify raxmon-entities-list and MaaS API authentication does not fail
  shell: |
    {% if maas_venv_enabled | bool %}
    . {{ maas_venv_bin }}/activate
    {% endif %}
    raxmon-entities-list
  register: raxmon_output
  failed_when: raxmon_output.rc != 0

- name: Entity {{ entity_name }} count
  shell: |
    {% if maas_venv_enabled | bool %}
    . {{ maas_venv_bin }}/activate
    {% endif %}
    raxmon-entities-list | grep ' label={{ entity_name }} provider=Rackspace Monitoring ...>$' | wc -l
  register: entity_count

- name: Zero entities with label {{ entity_name }} exist
  fail:
    msg: "Zero entities with the label {{ entity_name }} exist. Entities should be created as part of the hardware provisioning process, if missing, please consult the internal documentation for associating one with the device."
  when: entity_count.stdout|int == 0

- name: At most one {{ entity_name }} entity exists
  fail:
    msg: "Entity count of {{ entity_count.stdout }} != 1 for entity with the label {{ entity_name }}. Reduce the entity count to one by deleting or re-labelling the duplicate entities."
  when: entity_count.stdout|int != 1

- name: Get entity {{ entity_name }}
  shell: |
    {% if maas_venv_enabled | bool %}
    . {{ maas_venv_bin }}/activate
    {% endif %}
    raxmon-entities-list | grep ' label={{ entity_name }} provider=Rackspace Monitoring ...>$' | awk '{print $2}' | cut -d= -f2
  register: entity

- name: Assign agent ID to entity
  shell: |
    {% if maas_venv_enabled | bool %}
    . {{ maas_venv_bin }}/activate
    {% endif %}
    raxmon-entities-update --id {{ entity.stdout }} --agent-id {{ entity_name }}

- name: Agent token {{ entity_name }} count
  shell: |
    {% if maas_venv_enabled | bool %}
    . {{ maas_venv_bin }}/activate
    {% endif %}
    raxmon-agent-tokens-list | grep ' label={{ entity_name }}, ' | wc -l
  register: agent_token_count
  when: maas_agent_token is not defined

- name: At most one {{ entity_name }} agent token should exist
  fail:
    msg: "Agent token count of {{ agent_token_count.stdout }} > 1 for entity with the label {{ entity_name }}"
  when: maas_agent_token is not defined and agent_token_count.stdout|int > 1

- name: Create agent token
  shell: |
    {% if maas_venv_enabled | bool %}
    . {{ maas_venv_bin }}/activate
    {% endif %}
    raxmon-agent-tokens-create --label={{ entity_name }}
  register: agent_token
  when: maas_agent_token is not defined and agent_token_count.stdout|int == 0

- name: Get agent token
  shell: |
    {% if maas_venv_enabled | bool %}
    . {{ maas_venv_bin }}/activate
    {% endif %}
    raxmon-agent-tokens-list | grep '<AgentToken: id=.* label={{ entity_name }}, .*>' | awk '{print $2}' | sed -e 's/id=\(.*\),/\1/g'
  register: maas_agent_token_id
  when: maas_agent_token is not defined

- name: Set agent token fact
  set_fact: maas_agent_token={{ maas_agent_token_id.stdout }}
  when: maas_agent_token is not defined

- name: Generate raxmon agent config
  template:
    src: rackspace-monitoring-agent.cfg
    dest: /etc/rackspace-monitoring-agent.cfg
    mode: 0600
    owner: root
    group: root

- name: Ensure raspace-monitoring-agent config directory exists
  file:
    name: /etc/rackspace-monitoring-agent.conf.d
    state: directory
    group: root
    owner: root
  tags:
    - rackspace-monitoring-agent-setup

- name: Start raxmon agent
  service:
    name: rackspace-monitoring-agent
    state: started
    enabled: yes
